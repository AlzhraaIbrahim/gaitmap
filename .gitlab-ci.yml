stages:
  - testing
  - deploy
  - pages

.python_base: &python_base
  tags:
    - docker
  image: python:3.7
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
      - .venv
    key: global-cache-key
  before_script:
    - git config --global credential.helper store
    - echo "https://gitlab-ci-token:${CI_JOB_TOKEN}@mad-srv.informatik.uni-erlangen.de" > ~/.git-credentials
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - poetry install
    - poetry update  # Ensure newest package versions are installed when caching is used

test:
  stage: testing
  <<: *python_base
  script:
    - poetry run pytest

lint-prospector:
  stage: testing
  <<: *python_base
  script:
    - poetry run prospector

lint-black:
  stage: testing
  <<: *python_base
  script:
    - poetry run black . --check

docs:
  stage: deploy
  <<: *python_base
  script:
    - cd docs && poetry run make html
    - mv _build/html ../html_docs
  artifacts:
    paths:
      - html_docs
    expire_in: 2 month

pages:
  stage: pages
  dependencies:
    - docs
  tags:
    - docker
  script:
  - mkdir .public
  - cp -r html_docs/* .public
  - mv .public public
  artifacts:
    paths:
    - public
  only:
  - master
