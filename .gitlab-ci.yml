stages:
  - create_env
  - testing
  - deploy
  - pages

variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"

.python_base: &python_base
  tags:
    - docker
  image: python:3.7

.cached_python_base: &cached_python_base
  <<: *python_base
  before_script:
    - find ${CI_PROJECT_DIR}/.venv/ -xtype l -delete
    - python -m venv ${CI_PROJECT_DIR}/.venv/
    - . ${CI_PROJECT_DIR}/.venv/bin/activate
  dependencies:
    - create_env

create_env:
  stage: create_env
  <<: *python_base
  script:
    - git config --global credential.helper store
    - echo "https://gitlab-ci-token:${CI_JOB_TOKEN}@mad-srv.informatik.uni-erlangen.de" > ~/.git-credentials
    - pip install pip --upgrade
    - pip install poetry
    - poetry run pip install psutil
    - poetry update --lock
    - poetry install  --remove-untracked
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR}/.venv
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .cache/pip
      - .venv

test:
  stage: testing
  <<: *cached_python_base
  script:
    - doit test -p "-n 4"

lint:
  stage: testing
  <<: *cached_python_base
  script:
    - doit -v 0 --continue format_check lint

docs:
  stage: deploy
  <<: *cached_python_base
  script:
    - doit docs
    - cp docs/_build/html ./html_docs
  artifacts:
    paths:
      - html_docs
    expire_in: 2 month
  cache:
    key: "${CI_JOB_NAME}_${CI_COMMIT_BRANCH}"
    paths:
      - docs/auto_examples
      - docs/_build

pages:
  stage: pages
  dependencies:
    - docs
  tags:
    - docker
  script:
  - mkdir .public
  - cp -r html_docs/* .public
  - mv .public public
  artifacts:
    paths:
    - public
  only:
  - master
